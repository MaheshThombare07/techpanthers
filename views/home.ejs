<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Store Placement Analysis</title>


    <style>
        body {
    font-family: Arial, sans-serif;
    background-color: #e9ecef;
    margin: 0;
    padding: 0;
}

nav {
    display: flex;
    align-items: center;
    background: #007bff;
    padding: 15px;
    color: white;
    font-size: 20px;
    font-weight: bold;
}

#city-search {
    width: 100%; /* Make the input field fill the container */
    max-width: 330px; /* Set a max width so it doesn't grow too large */
    padding: 10px; /* Add padding inside the input */
    font-size: 16px; /* Set font size */
    box-sizing: border-box; /* Include padding in the width calculation */
}

.logo {
    height: 50px; /* Logo ka size adjust karein */
    margin-right: 15px;
}

.container {
    display: flex;
    height: 90vh;
    height: fit-content;
}

.left-panel {
    width: 20%;
    padding: 20px;
    background: #e9ecef;
    height: fit-content;
}

.left-panel input,
.left-panel select,
.left-panel button {
    width: 100%;
    margin-bottom: 15px;
    padding: 12px;
    font-size: 16px;
    border-radius: 5px;
    border: 1px solid #ccc;
}

.left-panel button {
    background: #007bff;
    color: white;
    cursor: pointer;
    font-weight: bold;
}

.map-area {
    flex-grow: 1;
    background: #dee2e6;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 22px;
    font-weight: bold;
    color: #343a40;
    /* overflow-y: scroll; */
}

#cmap{
width: 100vw;
height: 30vh;
background-color: #d5d7d9;
margin: 10px;
border-width: 10px;
display: flex;
justify-content: center;
flex-direction: row;
}
#map{
    width: 80vw;
    height: 100%;  
    }

    #map:before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(to top, rgba(0, 0, 0, 0.5), transparent);
        z-index: 10; /* Place the gradient above the map */
    }
    


    
select {
    margin-bottom: 15px;
    padding: 8px;
    font-size: 16px;
    border-radius: 5px;
}
#heatmap {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
    gap: 5px;
    padding: 10px;
    max-width: 40vw;
    background: white;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
    top: -45px;
    position: relative;
    border-radius: 10px;
    /* position: fixed; */
    height: 60vh;
    overflow-y: auto;
    /* top: 120px; */
    /* left: 23%; */
    /* margin-top: 120px; */
    height: fit-content;
}
.city-block {
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 12px;
    font-weight: bold;
    color: white;
    text-align: center;
    cursor: pointer;
    border-radius: 5px;
    transition: transform 0.2s, background-color 0.3s;
    padding: 10px;
    min-height: 80px;
}
.city-block:hover {
    transform: scale(1.1);
}

.right-panel {
    width: 34%;
    padding: 20px;
    background: #e9ecef;
    /* overflow-y: auto; */
    height: fit-content;
}

.graph {
    margin-bottom: 25px;
    background: white;
    padding: 15px;
    border-radius: 10px;
    box-shadow: 0px 5px 15px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease-in-out;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.graph h2 {
    text-align: center;
    font-size: 18px;
    margin-bottom: 10px;
}

.graph canvas {
    width: 100% !important;
    height: 250px !important;
}

.graph:hover {
    transform: scale(1.05);
}

#suggestions {
    background: white;
    border: 1px solid #ccc;
    max-height: 150px;
    overflow-y: auto;
    display: none;
    border-radius: 5px;
}

#suggestions div {
    padding: 10px;
    cursor: pointer;
    font-size: 16px;
}

#suggestions div:hover {
    background: #007bff;
    color: white;
}

#cityFilter{
    visibility: hidden;
}
    </style>
    <link rel="stylesheet" href="style.css">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>
</head>
<body>
    <nav>  <img src="./my logo.webp" alt="Logo" class="logo">
        <h1>Store Placement Analysis</h1>
    </nav>
    <div class="container">
        <aside class="left-panel">
            <input type="text" id="city-search" placeholder="Search City...">
            <div id="suggestions"></div>
            <select id="store-type">
                <option value="grocery">City</option>
                <option value="electronics">Pune</option>
                <option value="clothing">Delhi</option>
                <option value="clothing">Mumbai</option>
            </select>
            <button id="submit-btn">Submit</button>
        </aside>
        <main class="map-area">
            <div><select id="cityFilter">
                <option value="all">Show All</option>
            </select>
        
            <div id="heatmap"></div>
        
            <script>
                const cityData = [
                    // { name: "Shivajinagar", lat: 18.5308, lon: 73.8473, density: 1500 },
                    // { name: "Kothrud", lat: 18.5074, lon: 73.8077, density: 1300 },
                    // { name: "Hinjewadi", lat: 18.5974, lon: 73.7181, density: 1000 },
                    // { name: "Viman Nagar", lat: 18.5679, lon: 73.9143, density: 1200 },
                    // { name: "Hadapsar", lat: 18.5089, lon: 73.9259, density: 1600 },
                    // { name: "Baner", lat: 18.5636, lon: 73.7769, density: 1400 },
                    // { name: "Koregaon Park", lat: 18.5362, lon: 73.8915, density: 1700 },
                    { name: "Wakad", lat: 18.5982, lon: 73.7617, density: 1300 },
                    { name: "Aundh", lat: 18.5590, lon: 73.8077, density: 1350 },
                    { name: "Pimpri", lat: 18.6196, lon: 73.8122, density: 1550 },
                    { name: "Chinchwad", lat: 18.6298, lon: 73.8131, density: 1450 },
                    { name: "Swargate", lat: 18.5018, lon: 73.8636, density: 1650 },
                    { name: "Bavdhan", lat: 18.5167, lon: 73.7737, density: 1250 },
                    { name: "Magarpatta", lat: 18.5129, lon: 73.9270, density: 1750 },
                    { name: "Yerawada", lat: 18.5600, lon: 73.8892, density: 1800 },
                    { name: "Kharadi", lat: 18.5517, lon: 73.9342, density: 1700 },
                    { name: "Warje", lat: 18.4869, lon: 73.7875, density: 1400 },
                    { name: "Dhankawadi", lat: 18.4656, lon: 73.8563, density: 1600 },
                    { name: "Kondhwa", lat: 18.4635, lon: 73.8907, density: 1500 },
                    { name: "Lohegaon", lat: 18.5811, lon: 73.9206, density: 1300 },
                    { name: "Vadgaon Sheri", lat: 18.5549, lon: 73.9113, density: 1550 },
                    { name: "Sinhagad Road", lat: 18.4575, lon: 73.8111, density: 1400 },
                    { name: "Manjri", lat: 18.5025, lon: 73.9931, density: 1250 },
                    { name: "Pashan", lat: 18.5464, lon: 73.7842, density: 1350 },
                    { name: "Dhanori", lat: 18.5842, lon: 73.8995, density: 1450 },
                     { name: "Shivajinagar", lat: 18.5308, lon: 73.8473, density: 1500 },
                    { name: "Kothrud", lat: 18.5074, lon: 73.8077, density: 1300 },
                    { name: "Hinjewadi", lat: 18.5974, lon: 73.7181, density: 1000 },
                    { name: "Viman Nagar", lat: 18.5679, lon: 73.9143, density: 1200 },
                    { name: "Hadapsar", lat: 18.5089, lon: 73.9259, density: 1600 },
                    { name: "Baner", lat: 18.5636, lon: 73.7769, density: 1400 },
                    { name: "Koregaon Park", lat: 18.5362, lon: 73.8915, density: 1700 },
                    { name: "Wakad", lat: 18.5982, lon: 73.7617, density: 1300 },
                    { name: "Aundh", lat: 18.5590, lon: 73.8077, density: 1350 },
                    { name: "Pimpri", lat: 18.6196, lon: 73.8122, density: 1550 },
                    { name: "Chinchwad", lat: 18.6298, lon: 73.8131, density: 1450 },
                    { name: "Swargate", lat: 18.5018, lon: 73.8636, density: 1650 },
                    { name: "Bavdhan", lat: 18.5167, lon: 73.7737, density: 1250 },
                    { name: "Magarpatta", lat: 18.5129, lon: 73.9270, density: 1750 },
                    { name: "Yerawada", lat: 18.5600, lon: 73.8892, density: 1800 },
                    // { name: "Kharadi", lat: 18.5517, lon: 73.9342, density: 1700 },
                    // { name: "Warje", lat: 18.4869, lon: 73.7875, density: 1400 },
                    // { name: "Dhankawadi", lat: 18.4656, lon: 73.8563, density: 1600 },
                    // { name: "Kondhwa", lat: 18.4635, lon: 73.8907, density: 1500 },
                    // { name: "Lohegaon", lat: 18.5811, lon: 73.9206, density: 1300 },
                    // { name: "Vadgaon Sheri", lat: 18.5549, lon: 73.9113, density: 1550 },
                    // { name: "Sinhagad Road", lat: 18.4575, lon: 73.8111, density: 1400 },
                    // { name: "Manjri", lat: 18.5025, lon: 73.9931, density: 1250 },
                    // { name: "Pashan", lat: 18.5464, lon: 73.7842, density: 1350 },
                    // { name: "Dhanori", lat: 18.5842, lon: 73.8995, density: 1450 }
        
                ];
        
                const minDensity = Math.min(...cityData.map(c => c.density));
                const maxDensity = Math.max(...cityData.map(c => c.density));
        
                function getHeatColor(density) {
                    let ratio = (density - minDensity) / (maxDensity - minDensity);
                    if (ratio < 0.2) return "#3498db";
                    if (ratio < 0.5) return "#2ecc71";
                    if (ratio < 0.8) return "#f1c40f";
                    return "#e74c3c";
                }
        
                const cityFilter = document.getElementById("cityFilter");
                cityData.forEach(city => {
                    let option = document.createElement("option");
                    option.value = city.name;
                    option.textContent = city.name;
                    cityFilter.appendChild(option);
                });
        
                function renderHeatmap(filter = "all") {
                    const heatmap = document.getElementById("heatmap");
                    heatmap.innerHTML = "";
        
                    let filteredData = filter === "all" ? cityData : cityData.filter(city => city.name === filter);
        
                    filteredData.forEach(city => {
                        let cityBlock = document.createElement("div");
                        cityBlock.classList.add("city-block");
                        cityBlock.textContent = city.name;
                        cityBlock.style.backgroundColor = getHeatColor(city.density);
        
                        cityBlock.onclick = () => {
                            window.location.href = `index.html?lat=${city.lat}&lon=${city.lon}&name=${encodeURIComponent(city.name)}`;
                        };
        
                        heatmap.appendChild(cityBlock);
                    });
                }
        
                renderHeatmap();
        
                cityFilter.addEventListener("change", (e) => {
                    renderHeatmap(e.target.value);
                });
            </script></div>
        </main>
        <aside class="right-panel">
            <div class="graph" id="population-density">
                <h2>Population Density</h2>
                <canvas id="populationChart"></canvas>
            </div>
            <div class="graph" id="revenue-analysis">
                <h2>Revenue Analysis</h2>
                <canvas id="revenueChart"></canvas>
            </div>
            <div class="graph" id="growth-trend">
                <h2>Growth Trend</h2>
                <canvas id="growthChart"></canvas>
            </div>
        </aside>
    </div>
    <section id="cmap">
       
        <div id="map"></div>
        
    
        <script>
            // Function to get URL query parameters
            function getQueryParams() {
                const params = new URLSearchParams(window.location.search);
                return {
                    lat: parseFloat(params.get("lat")),
                    lon: parseFloat(params.get("lon")),
                    name: params.get("name")
                };
            }
    
            // Get city details from URL
            const { lat, lon, name } = getQueryParams();
    
            // Initialize map centered on Pune
            var map = L.map('map').setView([lat || 18.5204, lon || 73.8567], 13);
    
            // Add OpenStreetMap tile layer
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '© OpenStreetMap contributors'
            }).addTo(map);
    
            // Sample population data for city blocks
            var populationData = [
            [
        { name: "Shivajinagar", lat: 18.5308, lon: 73.8473, density: 1500 },
        { name: "Kothrud", lat: 18.5074, lon: 73.8077, density: 1300 },
        { name: "Hinjewadi", lat: 18.5974, lon: 73.7181, density: 1000 },
        { name: "Viman Nagar", lat: 18.5679, lon: 73.9143, density: 1200 },
        { name: "Hadapsar", lat: 18.5089, lon: 73.9259, density: 1600 },
        { name: "Baner", lat: 18.5636, lon: 73.7769, density: 1400 },
        { name: "Koregaon Park", lat: 18.5362, lon: 73.8915, density: 1700 },
        { name: "Wakad", lat: 18.5982, lon: 73.7617, density: 1300 },
        // { name: "Aundh", lat: 18.5590, lon: 73.8077, density: 1350 },
        // { name: "Pimpri", lat: 18.6196, lon: 73.8122, density: 1550 },
        // { name: "Chinchwad", lat: 18.6298, lon: 73.8131, density: 1450 },
        // { name: "Swargate", lat: 18.5018, lon: 73.8636, density: 1650 },
        // { name: "Bavdhan", lat: 18.5167, lon: 73.7737, density: 1250 },
        // { name: "Magarpatta", lat: 18.5129, lon: 73.9270, density: 1750 },
        // { name: "Yerawada", lat: 18.5600, lon: 73.8892, density: 1800 },
        // { name: "Kharadi", lat: 18.5517, lon: 73.9342, density: 1700 },
        // { name: "Warje", lat: 18.4869, lon: 73.7875, density: 1400 },
        // { name: "Dhankawadi", lat: 18.4656, lon: 73.8563, density: 1600 },
        // { name: "Kondhwa", lat: 18.4635, lon: 73.8907, density: 1500 },
        // { name: "Lohegaon", lat: 18.5811, lon: 73.9206, density: 1300 },
        // { name: "Vadgaon Sheri", lat: 18.5549, lon: 73.9113, density: 1550 },
        // { name: "Sinhagad Road", lat: 18.4575, lon: 73.8111, density: 1400 },
        // { name: "Manjri", lat: 18.5025, lon: 73.9931, density: 1250 },
        // { name: "Pashan", lat: 18.5464, lon: 73.7842, density: 1350 },
        // { name: "Dhanori", lat: 18.5842, lon: 73.8995, density: 1450 }
    ]
    
            ];
    
            // Convert data to heatmap points
            var heatmapPoints = populationData.map(city => [city.lat, city.lon, city.density / 2000]);
    
            // Create heatmap layer
            var heat = L.heatLayer(heatmapPoints, {
                radius: 25,
                blur: 15,
                maxZoom: 15
            }).addTo(map);
    
            // If a city is selected, add a marker
            if (lat && lon) {
                var marker = L.marker([lat, lon]).addTo(map);
                marker.bindPopup(`<b>${name}</b><br>Selected Location`).openPopup();
    
            }
        </script>

    </section>
    <script src="script.js"></script>
    <script>

document.getElementById("submit-btn").addEventListener("click", function() {
    alert("Search: " + document.getElementById("city-search").value + "\nStore Type: " + document.getElementById("store-type").value);
});

// 🔹 Function to create different types of charts
function createChart(ctx, type, labels, data, backgroundColor, borderColor) {
    new Chart(ctx, {
        type: type,
        data: {
            labels: labels,
            datasets: [{
                label: "Value",
                data: data,
                backgroundColor: backgroundColor,
                borderColor: borderColor,
                borderWidth: 2
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: { display: true },
                tooltip: { 
                    enabled: true,
                    mode: 'index',
                    intersect: false
                }
            },
            interaction: {
                mode: "nearest",
                intersect: false
            },
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
}

// 🔹 Creating different graphs with improved design
createChart(
    document.getElementById("populationChart"),
    "bar",
    ["High", "Medium", "Low"],
    [50, 35, 15],
    ["#007bff", "#28a745", "#dc3545"],
    ["#0056b3", "#1e7e34", "#c82333"]
);

createChart(
    document.getElementById("revenueChart"),
    "line",
    ["Q1", "Q2", "Q3", "Q4"],
    [5000, 7000, 10000, 15000],
    ["rgba(255, 99, 132, 0.5)"],
    ["rgba(255, 99, 132, 1)"]
);

createChart(
    document.getElementById("growthChart"),
    "doughnut",
    ["Increasing", "Stable", "Declining"],
    [60, 25, 15],
    ["#ffc107", "#17a2b8", "#6c757d"],
    ["#e0a800", "#138496", "#5a6268"]
);

// 🔹 Search Suggestion for Indian Cities using API
const cityInput = document.getElementById("city-search");
const suggestions = document.getElementById("suggestions");
let cities = [];

// 🔹 Fetch Indian Cities from API
async function fetchCities() {
    try {
        const response = await fetch("https://countriesnow.space/api/v0.1/countries/cities", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ country: "India" })
        });
        const data = await response.json();
        cities = data.data;
    } catch (error) {
        console.error("Error fetching cities:", error);
    }
}

// 🔹 Filter and show suggestions
cityInput.addEventListener("input", function () {
    const value = cityInput.value.toLowerCase();
    suggestions.innerHTML = "";
    if (value === "") {
        suggestions.style.display = "none";
        return;
    }

    const filteredCities = cities.filter(city => city.toLowerCase().includes(value));
    filteredCities.forEach(city => {
        const div = document.createElement("div");
        div.textContent = city;
        div.addEventListener("click", function () {
            cityInput.value = city;
            suggestions.style.display = "none";
        });
        suggestions.appendChild(div);
    });
    suggestions.style.display = "block";
});

fetchCities();

    </script>

    
</body>
</html>
